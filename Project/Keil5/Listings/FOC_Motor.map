Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    isr.o(i.ADC1_IRQHandler) refers to adc1.o(i.ADC1_GetChannelIntFlag) for ADC1_GetChannelIntFlag
    isr.o(i.ADC1_IRQHandler) refers to printfb.o(i.__0printf$bare) for __2printf
    isr.o(i.ADC1_IRQHandler) refers to adc1.o(i.ADC1_ClearChannelIntFlag) for ADC1_ClearChannelIntFlag
    isr.o(i.ADC1_IRQHandler) refers to isr.o(.data) for ADCFlag
    isr.o(i.CCP_IRQHandler) refers to ccp.o(i.CCP_GetOverflowIntFlag) for CCP_GetOverflowIntFlag
    isr.o(i.CCP_IRQHandler) refers to ccp.o(i.CCP_ClearOverflowIntFlag) for CCP_ClearOverflowIntFlag
    isr.o(i.CCP_IRQHandler) refers to ccp.o(i.CCP_GetCAPMode1IntFlag) for CCP_GetCAPMode1IntFlag
    isr.o(i.CCP_IRQHandler) refers to ccp.o(i.CCP_ClearCAPMode1IntFlag) for CCP_ClearCAPMode1IntFlag
    isr.o(i.EPWM_IRQHandler) refers to epwm.o(i.EPWM_GetPeriodIntFlag) for EPWM_GetPeriodIntFlag
    isr.o(i.EPWM_IRQHandler) refers to motor_control.o(i.FOC_Model) for FOC_Model
    isr.o(i.EPWM_IRQHandler) refers to epwm.o(i.EPWM_ClearPeriodIntFlag) for EPWM_ClearPeriodIntFlag
    main.o(i.HardwareInit) refers to epwm_config.o(i.EPWM_Init) for EPWM_Init
    main.o(i.HardwareInit) refers to uart_config.o(i.UART_Init) for UART_Init
    main.o(i.HardwareInit) refers to main.o(i.NVIC_Init) for NVIC_Init
    main.o(i.NVIC_Init) refers to main.o(i.NVIC_SetPriority) for NVIC_SetPriority
    main.o(i.NVIC_Init) refers to main.o(i.NVIC_EnableIRQ) for NVIC_EnableIRQ
    main.o(i.main) refers to system_config.o(i.System_Init) for System_Init
    main.o(i.main) refers to main.o(i.SoftwareInit) for SoftwareInit
    main.o(i.main) refers to main.o(i.HardwareInit) for HardwareInit
    motor_control.o(i.FOC_Model) refers to motor_math.o(i.MCM_Rev_Park) for MCM_Rev_Park
    motor_control.o(i.FOC_Model) refers to motor_svpwm.o(i.SVPWM_SetPhaseVoltage) for SVPWM_SetPhaseVoltage
    motor_control.o(i.FOC_Model) refers to motor_control.o(.data) for Stat_Volt_q_d
    motor_math.o(i.MCM_Park) refers to motor_math.o(i.MCM_Trig_Functions) for MCM_Trig_Functions
    motor_math.o(i.MCM_Rev_Park) refers to motor_math.o(i.MCM_Trig_Functions) for MCM_Trig_Functions
    motor_math.o(i.MCM_Sqrt) refers to idiv.o(.text) for __aeabi_idivmod
    motor_math.o(i.MCM_Trig_Functions) refers to motor_math.o(.constdata) for hSin_Cos_Table
    motor_svpwm.o(i.SVPWM_SetPhaseVoltage) refers to epwm.o(i.EPWM_ConfigChannelAsymDuty) for EPWM_ConfigChannelAsymDuty
    motor_svpwm.o(i.SVPWM_SetPhaseVoltage) refers to motor_svpwm.o(.data) for Period
    adc_config.o(i.ADC_Init) refers to system.o(i.SYS_EnablePeripheralClk) for SYS_EnablePeripheralClk
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_ConfigRunMode) for ADC1_ConfigRunMode
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_EnableScanChannel) for ADC1_EnableScanChannel
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_SetAN30Channel) for ADC1_SetAN30Channel
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_EnableHardwareTrigger) for ADC1_EnableHardwareTrigger
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_EnableEPWMCmp0TiggerChannel) for ADC1_EnableEPWMCmp0TiggerChannel
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_EnableChannelInt) for ADC1_EnableChannelInt
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_Start) for ADC1_Start
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_StartAdjust) for ADC1_StartAdjust
    adc_config.o(i.ADC_Init) refers to adc1.o(i.ADC1_EnableAdjust) for ADC1_EnableAdjust
    ccp_config.o(i.CCP_Init) refers to system.o(i.SYS_EnablePeripheralClk) for SYS_EnablePeripheralClk
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_ConfigCLK) for CCP_ConfigCLK
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_EnableCAPMode1) for CCP_EnableCAPMode1
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_ConfigCAPMode1) for CCP_ConfigCAPMode1
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_SelCAPMode1Channel) for CCP_SelCAPMode1Channel
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_EnableOverflowInt) for CCP_EnableOverflowInt
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_EnableCAPMode1Int) for CCP_EnableCAPMode1Int
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_EnableRun) for CCP_EnableRun
    ccp_config.o(i.CCP_Init) refers to ccp.o(i.CCP_Start) for CCP_Start
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_ConfigRunMode) for EPWM_ConfigRunMode
    epwm_config.o(i.EPWM_Init) refers to system.o(i.SYS_EnablePeripheralClk) for SYS_EnablePeripheralClk
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_ConfigChannelClk) for EPWM_ConfigChannelClk
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_ConfigChannelPeriod) for EPWM_ConfigChannelPeriod
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_ConfigChannelAsymDuty) for EPWM_ConfigChannelAsymDuty
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_EnableDeadZone) for EPWM_EnableDeadZone
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_DisableReverseOutput) for EPWM_DisableReverseOutput
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_EnableAutoLoadMode) for EPWM_EnableAutoLoadMode
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_ConfigLoadAndIntMode) for EPWM_ConfigLoadAndIntMode
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_AllBrakeDisable) for EPWM_AllBrakeDisable
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_EnablePeriodInt) for EPWM_EnablePeriodInt
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_ConfigCompareTriger) for EPWM_ConfigCompareTriger
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_EnableChannelRemap) for EPWM_EnableChannelRemap
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_EnableOutput) for EPWM_EnableOutput
    epwm_config.o(i.EPWM_Init) refers to epwm.o(i.EPWM_Start) for EPWM_Start
    tim_config.o(i.TIMER1_Init) refers to system.o(i.SYS_EnablePeripheralClk) for SYS_EnablePeripheralClk
    tim_config.o(i.TIMER1_Init) refers to timer.o(i.TMR_ConfigClk) for TMR_ConfigClk
    tim_config.o(i.TIMER1_Init) refers to timer.o(i.TMR_ConfigRunMode) for TMR_ConfigRunMode
    tim_config.o(i.TIMER1_Init) refers to timer.o(i.TMR_DisableOneShotMode) for TMR_DisableOneShotMode
    tim_config.o(i.TIMER1_Init) refers to timer.o(i.TMR_SetPeriod) for TMR_SetPeriod
    tim_config.o(i.TIMER1_Init) refers to timer.o(i.TMR_EnableOverflowInt) for TMR_EnableOverflowInt
    tim_config.o(i.TIMER1_Init) refers to timer.o(i.TMR_Start) for TMR_Start
    uart_config.o(i.Serial_GetRxFlag) refers to uart_config.o(.data) for U_RxdFlag
    uart_config.o(i.Serial_SendArray) refers to uart_config.o(i.Serial_SendByte) for Serial_SendByte
    uart_config.o(i.Serial_SendPacket) refers to uart_config.o(i.Serial_SendByte) for Serial_SendByte
    uart_config.o(i.Serial_SendPacket) refers to uart_config.o(i.Serial_SendArray) for Serial_SendArray
    uart_config.o(i.Serial_SendPacket) refers to uart_config.o(.bss) for U_SendData
    uart_config.o(i.Serial_SendString) refers to uart_config.o(i.Serial_SendByte) for Serial_SendByte
    uart_config.o(i.UART1_IRQHandler) refers to uart_config.o(i.__ARM_common_switch8) for __ARM_common_switch8
    uart_config.o(i.UART1_IRQHandler) refers to uart.o(i.UART_ReadRBR) for UART_ReadRBR
    uart_config.o(i.UART1_IRQHandler) refers to uart_config.o(.data) for U_IntID
    uart_config.o(i.UART1_IRQHandler) refers to uart_config.o(.bss) for U_ReceiveData
    uart_config.o(i.UART_Init) refers to system.o(i.SYS_EnablePeripheralClk) for SYS_EnablePeripheralClk
    uart_config.o(i.UART_Init) refers to uart.o(i.UART_ConfigRunMode) for UART_ConfigRunMode
    uart_config.o(i.UART_Init) refers to uart.o(i.UART_EnableAuto) for UART_EnableAuto
    uart_config.o(i.UART_Init) refers to uart.o(i.UART_EnableFIFO) for UART_EnableFIFO
    uart_config.o(i.UART_Init) refers to uart.o(i.UART_EnableTHREInt) for UART_EnableTHREInt
    uart_config.o(i.UART_Init) refers to uart.o(i.UART_EnableRBRInt) for UART_EnableRBRInt
    system_config.o(i.System_Init) refers to system.o(i.SYS_ConfigHSI) for SYS_ConfigHSI
    system_config.o(i.System_Init) refers to system.o(i.SYS_EnableHSI) for SYS_EnableHSI
    system_config.o(i.System_Init) refers to system.o(i.SYS_ConfigAHBClock) for SYS_ConfigAHBClock
    system_config.o(i.System_Init) refers to system.o(i.SYS_ConfigAPBClock) for SYS_ConfigAPBClock
    system_config.o(i.System_Init) refers to system_cms32m55xx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    system_cms32m55xx.o(i.SystemCoreClockUpdate) refers to uidiv.o(.text) for __aeabi_uidivmod
    system_cms32m55xx.o(i.SystemCoreClockUpdate) refers to system_cms32m55xx.o(.data) for SystemCoreClock
    system_cms32m55xx.o(i.SystemInit) refers to system_cms32m55xx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    startup_cms32m55xx.o(RESET) refers to startup_cms32m55xx.o(STACK) for __initial_sp
    startup_cms32m55xx.o(RESET) refers to startup_cms32m55xx.o(.text) for Reset_Handler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.NMI_Handler) for NMI_Handler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.HardFault_Handler) for HardFault_Handler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.SVC_Handler) for SVC_Handler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.PendSV_Handler) for PendSV_Handler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.SysTick_Handler) for SysTick_Handler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.GPIO0_IRQHandler) for GPIO0_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.GPIO2_IRQHandler) for GPIO2_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.GPIO3_IRQHandler) for GPIO3_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.GPIO4_IRQHandler) for GPIO4_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.CCP_IRQHandler) for CCP_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.ADC0_IRQHandler) for ADC0_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.WWDT_IRQHandler) for WWDT_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.EPWM_IRQHandler) for EPWM_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.ADC1_IRQHandler) for ADC1_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.ACMP_IRQHandler) for ACMP_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_cms32m55xx.o(RESET) refers to uart_config.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.TIMER0_IRQHandler) for TIMER0_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.TIMER1_IRQHandler) for TIMER1_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.WDT_IRQHandler) for WDT_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.SSP0_IRQHandler) for SSP0_IRQHandler
    startup_cms32m55xx.o(RESET) refers to isr.o(i.SYS_CHK_IRQHandler) for SYS_CHK_IRQHandler
    startup_cms32m55xx.o(.text) refers to system_cms32m55xx.o(i.SystemInit) for SystemInit
    startup_cms32m55xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    acmp.o(i.ACMP_GetOffsetAdjValue) refers to acmp.o(i.ACMP_GetResult) for ACMP_GetResult
    gpio.o(i.GPIO_EnableInt) refers to uart_config.o(i.__ARM_common_switch8) for __ARM_common_switch8
    i2c.o(i.I2C_ConfigSlaveModeAddr) refers to uart_config.o(i.__ARM_common_switch8) for __ARM_common_switch8
    opa.o(i.OPA_GetAutoAdjustResult) refers to opa.o(i.OPA_EnableAdjustMode) for OPA_EnableAdjustMode
    opa.o(i.OPA_GetAutoAdjustResult) refers to opa.o(i.OPA_Start) for OPA_Start
    opa.o(i.OPA_GetAutoAdjustResult) refers to opa.o(i.OPA_GetResult) for OPA_GetResult
    opa.o(i.OPA_GetAutoAdjustResult) refers to opa.o(i.OPA_DisableAdjustMode) for OPA_DisableAdjustMode
    opa.o(i.OPA_GetAutoAdjustResult) refers to opa.o(i.OPA_Stop) for OPA_Stop
    system.o(i.SYS_ConfigAHBClock) refers to system.o(i.SYS_GetHSIState) for SYS_GetHSIState
    uart.o(i.UART_ConfigRunMode) refers to uidiv.o(.text) for __aeabi_uidivmod
    uart.o(i.UART_ConfigRunMode) refers to system_cms32m55xx.o(.data) for SystemAPBClock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000F) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$00000011) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry12b.o(.ARM.Collect$$$$0000000E) for __rt_lib_shutdown_fini
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_cms32m55xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_cms32m55xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing isr.o(.rev16_text), (4 bytes).
    Removing isr.o(.revsh_text), (4 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing motor_control.o(.rev16_text), (4 bytes).
    Removing motor_control.o(.revsh_text), (4 bytes).
    Removing motor_math.o(.rev16_text), (4 bytes).
    Removing motor_math.o(.revsh_text), (4 bytes).
    Removing motor_math.o(i.MCM_Clarke), (100 bytes).
    Removing motor_math.o(i.MCM_Park), (184 bytes).
    Removing motor_math.o(i.MCM_Sqrt), (80 bytes).
    Removing motor_math.o(i.MCM_floatToIntBit), (8 bytes).
    Removing motor_svpwm.o(.rev16_text), (4 bytes).
    Removing motor_svpwm.o(.revsh_text), (4 bytes).
    Removing retarget.o(.rev16_text), (4 bytes).
    Removing retarget.o(.revsh_text), (4 bytes).
    Removing retarget.o(i._sys_exit), (4 bytes).
    Removing retarget.o(i._ttywrch), (24 bytes).
    Removing retarget.o(i.ferror), (8 bytes).
    Removing retarget.o(i.fgetc), (48 bytes).
    Removing adc_config.o(.rev16_text), (4 bytes).
    Removing adc_config.o(.revsh_text), (4 bytes).
    Removing adc_config.o(i.ADC_Init), (92 bytes).
    Removing ccp_config.o(.rev16_text), (4 bytes).
    Removing ccp_config.o(.revsh_text), (4 bytes).
    Removing ccp_config.o(i.CCP_Init), (148 bytes).
    Removing epwm_config.o(.rev16_text), (4 bytes).
    Removing epwm_config.o(.revsh_text), (4 bytes).
    Removing tim_config.o(.rev16_text), (4 bytes).
    Removing tim_config.o(.revsh_text), (4 bytes).
    Removing tim_config.o(i.TIMER1_Init), (96 bytes).
    Removing uart_config.o(.rev16_text), (4 bytes).
    Removing uart_config.o(.revsh_text), (4 bytes).
    Removing uart_config.o(i.Serial_GetRxFlag), (28 bytes).
    Removing uart_config.o(i.Serial_SendArray), (26 bytes).
    Removing uart_config.o(i.Serial_SendByte), (24 bytes).
    Removing uart_config.o(i.Serial_SendPacket), (28 bytes).
    Removing uart_config.o(i.Serial_SendString), (26 bytes).
    Removing uart_config.o(i.Uart1_getchar), (26 bytes).
    Removing system_config.o(.rev16_text), (4 bytes).
    Removing system_config.o(.revsh_text), (4 bytes).
    Removing system_cms32m55xx.o(.rev16_text), (4 bytes).
    Removing system_cms32m55xx.o(.revsh_text), (4 bytes).
    Removing startup_cms32m55xx.o(HEAP), (256 bytes).
    Removing acmp.o(.rev16_text), (4 bytes).
    Removing acmp.o(.revsh_text), (4 bytes).
    Removing acmp.o(i.ACMP_ClearIntFlag), (20 bytes).
    Removing acmp.o(i.ACMP_ConfigEventAndIntMode), (74 bytes).
    Removing acmp.o(i.ACMP_ConfigNegative), (154 bytes).
    Removing acmp.o(i.ACMP_ConfigPositive), (84 bytes).
    Removing acmp.o(i.ACMP_DisableEventOut), (56 bytes).
    Removing acmp.o(i.ACMP_DisableFilter), (58 bytes).
    Removing acmp.o(i.ACMP_DisableHYS), (60 bytes).
    Removing acmp.o(i.ACMP_DisableInt), (30 bytes).
    Removing acmp.o(i.ACMP_DisableReverseOutput), (58 bytes).
    Removing acmp.o(i.ACMP_EnableCADJAdjust), (92 bytes).
    Removing acmp.o(i.ACMP_EnableConfigAdjust), (38 bytes).
    Removing acmp.o(i.ACMP_EnableEventOut), (56 bytes).
    Removing acmp.o(i.ACMP_EnableFilter), (96 bytes).
    Removing acmp.o(i.ACMP_EnableHYS), (102 bytes).
    Removing acmp.o(i.ACMP_EnableInt), (30 bytes).
    Removing acmp.o(i.ACMP_EnableReverseOutput), (58 bytes).
    Removing acmp.o(i.ACMP_GetIntFlag), (26 bytes).
    Removing acmp.o(i.ACMP_GetOffsetAdjValue), (404 bytes).
    Removing acmp.o(i.ACMP_GetResult), (44 bytes).
    Removing acmp.o(i.ACMP_Start), (58 bytes).
    Removing acmp.o(i.ACMP_Stop), (58 bytes).
    Removing adc0.o(.rev16_text), (4 bytes).
    Removing adc0.o(.revsh_text), (4 bytes).
    Removing adc0.o(i.ADC0_ClearChannelIntFlag), (30 bytes).
    Removing adc0.o(i.ADC0_ClearCompareIntFlag), (28 bytes).
    Removing adc0.o(i.ADC0_ConfigCompare), (68 bytes).
    Removing adc0.o(i.ADC0_ConfigRunMode), (40 bytes).
    Removing adc0.o(i.ADC0_DisableChannel), (22 bytes).
    Removing adc0.o(i.ADC0_DisableChannelInt), (22 bytes).
    Removing adc0.o(i.ADC0_DisableCompare), (24 bytes).
    Removing adc0.o(i.ADC0_DisableCompareInt), (24 bytes).
    Removing adc0.o(i.ADC0_DisableHardwareTrigger), (140 bytes).
    Removing adc0.o(i.ADC0_EnableChannel), (22 bytes).
    Removing adc0.o(i.ADC0_EnableChannelInt), (22 bytes).
    Removing adc0.o(i.ADC0_EnableCompare), (28 bytes).
    Removing adc0.o(i.ADC0_EnableCompareInt), (28 bytes).
    Removing adc0.o(i.ADC0_EnableHardwareTrigger), (144 bytes).
    Removing adc0.o(i.ADC0_GetChannelIntFlag), (26 bytes).
    Removing adc0.o(i.ADC0_GetCompareIntFlag), (10 bytes).
    Removing adc0.o(i.ADC0_GetCompareResult), (16 bytes).
    Removing adc0.o(i.ADC0_GetResult), (16 bytes).
    Removing adc0.o(i.ADC0_SelSoftwareSwitchChannel), (24 bytes).
    Removing adc0.o(i.ADC0_SetAN30Channel), (38 bytes).
    Removing adc0.o(i.ADC0_Start), (28 bytes).
    Removing adc0.o(i.ADC0_Stop), (28 bytes).
    Removing adc1.o(.rev16_text), (4 bytes).
    Removing adc1.o(.revsh_text), (4 bytes).
    Removing adc1.o(i.ADC1_ClearAdjustErrorFlag), (30 bytes).
    Removing adc1.o(i.ADC1_ClearCompareIntFlag), (28 bytes).
    Removing adc1.o(i.ADC1_ClearConvertErrorFlag), (30 bytes).
    Removing adc1.o(i.ADC1_ConfigCompare), (68 bytes).
    Removing adc1.o(i.ADC1_ConfigRunMode), (56 bytes).
    Removing adc1.o(i.ADC1_DisableAdjust), (28 bytes).
    Removing adc1.o(i.ADC1_DisableChannelInt), (22 bytes).
    Removing adc1.o(i.ADC1_DisableCompare), (24 bytes).
    Removing adc1.o(i.ADC1_DisableCompareInt), (24 bytes).
    Removing adc1.o(i.ADC1_DisableHardwareTrigger), (62 bytes).
    Removing adc1.o(i.ADC1_DisableScanChannel), (22 bytes).
    Removing adc1.o(i.ADC1_EnableAdjust), (28 bytes).
    Removing adc1.o(i.ADC1_EnableChannelInt), (22 bytes).
    Removing adc1.o(i.ADC1_EnableCompare), (28 bytes).
    Removing adc1.o(i.ADC1_EnableCompareInt), (28 bytes).
    Removing adc1.o(i.ADC1_EnableEPWMCmp0TiggerChannel), (22 bytes).
    Removing adc1.o(i.ADC1_EnableHardwareTrigger), (92 bytes).
    Removing adc1.o(i.ADC1_EnableReset), (28 bytes).
    Removing adc1.o(i.ADC1_EnableScanChannel), (22 bytes).
    Removing adc1.o(i.ADC1_GetAdjustErrorFlag), (16 bytes).
    Removing adc1.o(i.ADC1_GetCompareIntFlag), (10 bytes).
    Removing adc1.o(i.ADC1_GetCompareResult), (18 bytes).
    Removing adc1.o(i.ADC1_GetConvertErrorFlag), (16 bytes).
    Removing adc1.o(i.ADC1_GetResult), (16 bytes).
    Removing adc1.o(i.ADC1_SetAN30Channel), (38 bytes).
    Removing adc1.o(i.ADC1_Start), (28 bytes).
    Removing adc1.o(i.ADC1_StartAdjust), (44 bytes).
    Removing adc1.o(i.ADC1_Stop), (28 bytes).
    Removing ccp.o(.rev16_text), (4 bytes).
    Removing ccp.o(.revsh_text), (4 bytes).
    Removing ccp.o(i.CCP_ClearCAPMode0IntFlag), (20 bytes).
    Removing ccp.o(i.CCP_ClearCompareIntFlag), (20 bytes).
    Removing ccp.o(i.CCP_ConfigCAPMode0), (76 bytes).
    Removing ccp.o(i.CCP_ConfigCAPMode1), (52 bytes).
    Removing ccp.o(i.CCP_ConfigCLK), (112 bytes).
    Removing ccp.o(i.CCP_ConfigCompare), (140 bytes).
    Removing ccp.o(i.CCP_DisableCAPMode0Int), (32 bytes).
    Removing ccp.o(i.CCP_DisableCAPMode1), (32 bytes).
    Removing ccp.o(i.CCP_DisableCAPMode1Int), (36 bytes).
    Removing ccp.o(i.CCP_DisableCAPnReload), (36 bytes).
    Removing ccp.o(i.CCP_DisableCompareInt), (32 bytes).
    Removing ccp.o(i.CCP_DisableOverflowInt), (32 bytes).
    Removing ccp.o(i.CCP_DisableReverseOutput), (108 bytes).
    Removing ccp.o(i.CCP_DisableRun), (32 bytes).
    Removing ccp.o(i.CCP_EnableCAPMode0), (72 bytes).
    Removing ccp.o(i.CCP_EnableCAPMode0Int), (32 bytes).
    Removing ccp.o(i.CCP_EnableCAPMode1), (32 bytes).
    Removing ccp.o(i.CCP_EnableCAPMode1Int), (36 bytes).
    Removing ccp.o(i.CCP_EnableCAPnReload), (36 bytes).
    Removing ccp.o(i.CCP_EnableCompareInt), (32 bytes).
    Removing ccp.o(i.CCP_EnableOverflowInt), (32 bytes).
    Removing ccp.o(i.CCP_EnablePWMMode), (72 bytes).
    Removing ccp.o(i.CCP_EnableReverseOutput), (108 bytes).
    Removing ccp.o(i.CCP_EnableRun), (32 bytes).
    Removing ccp.o(i.CCP_GetCAPMode0IntFlag), (28 bytes).
    Removing ccp.o(i.CCP_GetCAPMode0Result), (70 bytes).
    Removing ccp.o(i.CCP_GetCAPMode1Result), (24 bytes).
    Removing ccp.o(i.CCP_GetCompareIntFlag), (28 bytes).
    Removing ccp.o(i.CCP_SelCAPMode0Channel), (88 bytes).
    Removing ccp.o(i.CCP_SelCAPMode1Channel), (280 bytes).
    Removing ccp.o(i.CCP_Start), (60 bytes).
    Removing ccp.o(i.CCP_Stop), (60 bytes).
    Removing ccp.o(i.CCP_TriggerCaputer), (40 bytes).
    Removing crc.o(.rev16_text), (4 bytes).
    Removing crc.o(.revsh_text), (4 bytes).
    Removing crc.o(i.CRC_Input), (10 bytes).
    Removing crc.o(i.CRC_Output), (10 bytes).
    Removing crc.o(i.CRC_Reset), (10 bytes).
    Removing epwm.o(.rev16_text), (4 bytes).
    Removing epwm.o(.revsh_text), (4 bytes).
    Removing epwm.o(i.EPWM_AllBrakeEnable), (28 bytes).
    Removing epwm.o(i.EPWM_ClearBrakeIntFlag), (20 bytes).
    Removing epwm.o(i.EPWM_ClearCountCmpIntFlag), (24 bytes).
    Removing epwm.o(i.EPWM_ClearDownCmpIntFlag), (24 bytes).
    Removing epwm.o(i.EPWM_ClearHallErrorIntFlag), (20 bytes).
    Removing epwm.o(i.EPWM_ClearHallErrorState), (28 bytes).
    Removing epwm.o(i.EPWM_ClearUpCmpIntFlag), (24 bytes).
    Removing epwm.o(i.EPWM_ClearZeroIntFlag), (20 bytes).
    Removing epwm.o(i.EPWM_ConfigChannelSymDuty), (80 bytes).
    Removing epwm.o(i.EPWM_ConfigFaultBrakeLevel), (44 bytes).
    Removing epwm.o(i.EPWM_ConfigZeroIntSum), (44 bytes).
    Removing epwm.o(i.EPWM_DisableBrakeInt), (28 bytes).
    Removing epwm.o(i.EPWM_DisableChannelRemap), (28 bytes).
    Removing epwm.o(i.EPWM_DisableCountCmpInt), (36 bytes).
    Removing epwm.o(i.EPWM_DisableDeadZone), (120 bytes).
    Removing epwm.o(i.EPWM_DisableDownCmpInt), (28 bytes).
    Removing epwm.o(i.EPWM_DisableFaultBrake), (24 bytes).
    Removing epwm.o(i.EPWM_DisableHall), (28 bytes).
    Removing epwm.o(i.EPWM_DisableHallErrorInt), (28 bytes).
    Removing epwm.o(i.EPWM_DisableOutput), (24 bytes).
    Removing epwm.o(i.EPWM_DisablePeriodInt), (28 bytes).
    Removing epwm.o(i.EPWM_DisableSoftwareBrake), (32 bytes).
    Removing epwm.o(i.EPWM_DisableUpCmpInt), (28 bytes).
    Removing epwm.o(i.EPWM_DisableZeroInt), (24 bytes).
    Removing epwm.o(i.EPWM_DisableZeroIntSum), (28 bytes).
    Removing epwm.o(i.EPWM_EnableBrakeInt), (28 bytes).
    Removing epwm.o(i.EPWM_EnableCountCmpInt), (36 bytes).
    Removing epwm.o(i.EPWM_EnableDownCmpInt), (28 bytes).
    Removing epwm.o(i.EPWM_EnableEXTEEBrake), (40 bytes).
    Removing epwm.o(i.EPWM_EnableEXTLEBrake), (40 bytes).
    Removing epwm.o(i.EPWM_EnableFaultBrake), (24 bytes).
    Removing epwm.o(i.EPWM_EnableHall), (28 bytes).
    Removing epwm.o(i.EPWM_EnableHallErrorInt), (28 bytes).
    Removing epwm.o(i.EPWM_EnableOneShotMode), (32 bytes).
    Removing epwm.o(i.EPWM_EnableReverseOutput), (36 bytes).
    Removing epwm.o(i.EPWM_EnableSoftwareBrake), (32 bytes).
    Removing epwm.o(i.EPWM_EnableUpCmpInt), (28 bytes).
    Removing epwm.o(i.EPWM_EnableZeroInt), (24 bytes).
    Removing epwm.o(i.EPWM_EnableZeroIntSum), (28 bytes).
    Removing epwm.o(i.EPWM_ForceStop), (16 bytes).
    Removing epwm.o(i.EPWM_GetBrakeIntFlag), (12 bytes).
    Removing epwm.o(i.EPWM_GetCountCmpIntFlag), (32 bytes).
    Removing epwm.o(i.EPWM_GetDownCmpIntFlag), (32 bytes).
    Removing epwm.o(i.EPWM_GetHallErrorIntFlag), (20 bytes).
    Removing epwm.o(i.EPWM_GetHallState), (20 bytes).
    Removing epwm.o(i.EPWM_GetUpCmpIntFlag), (32 bytes).
    Removing epwm.o(i.EPWM_GetZeroIntFlag), (28 bytes).
    Removing epwm.o(i.EPWM_Stop), (40 bytes).
    Removing epwm.o(i.EPWM_WriteMaskBuffer), (40 bytes).
    Removing fmc.o(.rev16_text), (4 bytes).
    Removing fmc.o(.revsh_text), (4 bytes).
    Removing fmc.o(i.FMC_CRC), (52 bytes).
    Removing fmc.o(i.FMC_EraseAll), (28 bytes).
    Removing fmc.o(i.FMC_ErasePage), (32 bytes).
    Removing fmc.o(i.FMC_Read), (36 bytes).
    Removing fmc.o(i.FMC_Write), (36 bytes).
    Removing gpio.o(.rev16_text), (4 bytes).
    Removing gpio.o(.revsh_text), (4 bytes).
    Removing gpio.o(i.GPIO_ClearIntFlag), (12 bytes).
    Removing gpio.o(i.GPIO_ConfigRunMode), (56 bytes).
    Removing gpio.o(i.GPIO_DisableFilter), (8 bytes).
    Removing gpio.o(i.GPIO_DisableInt), (8 bytes).
    Removing gpio.o(i.GPIO_EnableFilter), (24 bytes).
    Removing gpio.o(i.GPIO_EnableInt), (110 bytes).
    Removing gpio.o(i.GPIO_GetIntFlag), (22 bytes).
    Removing hwdiv.o(.rev16_text), (4 bytes).
    Removing hwdiv.o(.revsh_text), (4 bytes).
    Removing hwdiv.o(i.HWDIV_Div), (40 bytes).
    Removing hwdiv.o(i.HWDIV_EnableSingedMode), (18 bytes).
    Removing hwdiv.o(i.HWDIV_EnableUnsingedMode), (18 bytes).
    Removing hwdiv.o(i.HWDIV_Mod), (40 bytes).
    Removing i2c.o(.rev16_text), (4 bytes).
    Removing i2c.o(.revsh_text), (4 bytes).
    Removing i2c.o(i.I2C_ClearACKFlag), (18 bytes).
    Removing i2c.o(i.I2C_ClearIntFlag), (18 bytes).
    Removing i2c.o(i.I2C_ClearStartFlag), (18 bytes).
    Removing i2c.o(i.I2C_ConfigClk), (18 bytes).
    Removing i2c.o(i.I2C_ConfigSlaveModeAddr), (104 bytes).
    Removing i2c.o(i.I2C_DisableInt), (18 bytes).
    Removing i2c.o(i.I2C_DisableOutput), (18 bytes).
    Removing i2c.o(i.I2C_EnableInt), (18 bytes).
    Removing i2c.o(i.I2C_EnableOutput), (18 bytes).
    Removing i2c.o(i.I2C_GetData), (10 bytes).
    Removing i2c.o(i.I2C_GetIntFlag), (14 bytes).
    Removing i2c.o(i.I2C_GetSlave10BitAddrFlag), (14 bytes).
    Removing i2c.o(i.I2C_GetSlave7BitAddrFlag), (12 bytes).
    Removing i2c.o(i.I2C_GetStatus), (8 bytes).
    Removing i2c.o(i.I2C_NotSendACK), (18 bytes).
    Removing i2c.o(i.I2C_Reset), (10 bytes).
    Removing i2c.o(i.I2C_SendACK), (18 bytes).
    Removing i2c.o(i.I2C_SendData), (8 bytes).
    Removing i2c.o(i.I2C_SendRestart), (18 bytes).
    Removing i2c.o(i.I2C_SendStart), (18 bytes).
    Removing i2c.o(i.I2C_SendStop), (18 bytes).
    Removing i2c.o(i.I2C_SendStopBeforeStart), (18 bytes).
    Removing opa.o(.rev16_text), (4 bytes).
    Removing opa.o(.revsh_text), (4 bytes).
    Removing opa.o(i.OPA_ConfigNegative), (16 bytes).
    Removing opa.o(i.OPA_ConfigOutput), (16 bytes).
    Removing opa.o(i.OPA_ConfigPositive), (16 bytes).
    Removing opa.o(i.OPA_ConfigRunMode), (16 bytes).
    Removing opa.o(i.OPA_DisableAdjustMode), (10 bytes).
    Removing opa.o(i.OPA_EnableAdjustMode), (22 bytes).
    Removing opa.o(i.OPA_EnableConfigAdjust), (6 bytes).
    Removing opa.o(i.OPA_EnableOPADJAdjust), (24 bytes).
    Removing opa.o(i.OPA_GetAutoAdjustResult), (104 bytes).
    Removing opa.o(i.OPA_GetResult), (12 bytes).
    Removing opa.o(i.OPA_Start), (10 bytes).
    Removing opa.o(i.OPA_Stop), (10 bytes).
    Removing pga.o(.rev16_text), (4 bytes).
    Removing pga.o(.revsh_text), (4 bytes).
    Removing pga.o(i.PGA_ConfigGain), (18 bytes).
    Removing pga.o(i.PGA_ConfigOutput), (18 bytes).
    Removing pga.o(i.PGA_ConfigPositive), (16 bytes).
    Removing pga.o(i.PGA_ConfigResistorGnd), (18 bytes).
    Removing pga.o(i.PGA_Start), (12 bytes).
    Removing pga.o(i.PGA_Stop), (12 bytes).
    Removing ssp.o(.rev16_text), (4 bytes).
    Removing ssp.o(.revsh_text), (4 bytes).
    Removing ssp.o(i.SSP_ConfigClk), (26 bytes).
    Removing ssp.o(i.SSP_ConfigRunMode), (40 bytes).
    Removing ssp.o(i.SSP_DisableMasterAutoControlCS), (18 bytes).
    Removing ssp.o(i.SSP_EnableMasterAutoControlCS), (18 bytes).
    Removing ssp.o(i.SSP_EnableMasterMode), (20 bytes).
    Removing ssp.o(i.SSP_EnableSlaveMode), (20 bytes).
    Removing ssp.o(i.SSP_GetBusyFlag), (14 bytes).
    Removing ssp.o(i.SSP_GetData), (10 bytes).
    Removing ssp.o(i.SSP_GetRFFFlag), (14 bytes).
    Removing ssp.o(i.SSP_GetRNEFlag), (14 bytes).
    Removing ssp.o(i.SSP_GetTFEFlag), (12 bytes).
    Removing ssp.o(i.SSP_GetTNFFlag), (14 bytes).
    Removing ssp.o(i.SSP_MasterClearCS), (18 bytes).
    Removing ssp.o(i.SSP_MasterSetCS), (18 bytes).
    Removing ssp.o(i.SSP_SendData), (8 bytes).
    Removing ssp.o(i.SSP_Start), (20 bytes).
    Removing ssp.o(i.SSP_Stop), (20 bytes).
    Removing system.o(.rev16_text), (4 bytes).
    Removing system.o(.revsh_text), (4 bytes).
    Removing system.o(i.SYS_ClearLVDIntFlag), (20 bytes).
    Removing system.o(i.SYS_ConfigClkOutput), (40 bytes).
    Removing system.o(i.SYS_ConfigLVDLevel), (26 bytes).
    Removing system.o(i.SYS_DisableClkOutput), (20 bytes).
    Removing system.o(i.SYS_DisableHSI), (32 bytes).
    Removing system.o(i.SYS_DisableLVD), (18 bytes).
    Removing system.o(i.SYS_DisableLVDInt), (20 bytes).
    Removing system.o(i.SYS_DisablePeripheralClk), (16 bytes).
    Removing system.o(i.SYS_DisableSARMProtect), (32 bytes).
    Removing system.o(i.SYS_DisableTEMP), (20 bytes).
    Removing system.o(i.SYS_EnableClkOutput), (20 bytes).
    Removing system.o(i.SYS_EnableLVD), (18 bytes).
    Removing system.o(i.SYS_EnableLVDInt), (20 bytes).
    Removing system.o(i.SYS_EnableSARMProtect), (32 bytes).
    Removing system.o(i.SYS_EnableTEMP), (20 bytes).
    Removing system.o(i.SYS_EnableTEMPConfigAdjust), (20 bytes).
    Removing system.o(i.SYS_EnableTRIMAdjustHSI), (20 bytes).
    Removing system.o(i.SYS_EnableTSVADJConfigAdjust), (42 bytes).
    Removing system.o(i.SYS_GetCPUResetFlag), (14 bytes).
    Removing system.o(i.SYS_GetLVDIntFlag), (16 bytes).
    Removing system.o(i.SYS_GetLVDStateFlag), (14 bytes).
    Removing system.o(i.SYS_GetMCUResetFlag), (14 bytes).
    Removing system.o(i.SYS_GetWDTResetFlag), (12 bytes).
    Removing system.o(i.SYS_GetWWDTResetFlag), (14 bytes).
    Removing timer.o(.rev16_text), (4 bytes).
    Removing timer.o(.revsh_text), (4 bytes).
    Removing timer.o(i.TMR_ClearOverflowIntFlag), (6 bytes).
    Removing timer.o(i.TMR_ConfigClk), (16 bytes).
    Removing timer.o(i.TMR_ConfigRunMode), (22 bytes).
    Removing timer.o(i.TMR_DisableOneShotMode), (10 bytes).
    Removing timer.o(i.TMR_DisableOverflowInt), (10 bytes).
    Removing timer.o(i.TMR_EnableOneShotMode), (10 bytes).
    Removing timer.o(i.TMR_EnableOverflowInt), (10 bytes).
    Removing timer.o(i.TMR_GetOverflowIntFlag), (10 bytes).
    Removing timer.o(i.TMR_GetTimingData), (6 bytes).
    Removing timer.o(i.TMR_SetPeriod), (4 bytes).
    Removing timer.o(i.TMR_Start), (10 bytes).
    Removing timer.o(i.TMR_Stop), (10 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(i.UART_DisableAuto), (10 bytes).
    Removing uart.o(i.UART_DisableCTS), (10 bytes).
    Removing uart.o(i.UART_DisableCTSInt), (10 bytes).
    Removing uart.o(i.UART_DisableFIFO), (6 bytes).
    Removing uart.o(i.UART_DisableModemInt), (10 bytes).
    Removing uart.o(i.UART_DisableRBRInt), (10 bytes).
    Removing uart.o(i.UART_DisableRTS), (10 bytes).
    Removing uart.o(i.UART_DisableRTSInt), (10 bytes).
    Removing uart.o(i.UART_DisableRxLineInt), (10 bytes).
    Removing uart.o(i.UART_DisableTHREInt), (10 bytes).
    Removing uart.o(i.UART_DisableXOFInt), (10 bytes).
    Removing uart.o(i.UART_DisableXONAndXOFF), (10 bytes).
    Removing uart.o(i.UART_EnableCTS), (10 bytes).
    Removing uart.o(i.UART_EnableCTSInt), (10 bytes).
    Removing uart.o(i.UART_EnableModemInt), (10 bytes).
    Removing uart.o(i.UART_EnableRTS), (10 bytes).
    Removing uart.o(i.UART_EnableRTSInt), (10 bytes).
    Removing uart.o(i.UART_EnableRxLineInt), (10 bytes).
    Removing uart.o(i.UART_EnableXOFInt), (10 bytes).
    Removing uart.o(i.UART_EnableXONAndXOFF), (16 bytes).
    Removing uart.o(i.UART_GetCTSState), (12 bytes).
    Removing uart.o(i.UART_GetXONAndXOFFState), (12 bytes).
    Removing uart.o(i.UART_RTSClean), (10 bytes).
    Removing uart.o(i.UART_RTSSet), (10 bytes).
    Removing uart.o(i.UART_SetXON1AndXOFF1), (6 bytes).
    Removing uart.o(i.UART_SetXON2AndXOFF2), (6 bytes).
    Removing uart.o(i.UART_WriteTHR), (4 bytes).
    Removing wdt.o(.rev16_text), (4 bytes).
    Removing wdt.o(.revsh_text), (4 bytes).
    Removing wdt.o(i.WDT_ClearOverflowIntFlag), (36 bytes).
    Removing wdt.o(i.WDT_ClearWDT), (36 bytes).
    Removing wdt.o(i.WDT_ConfigClk), (48 bytes).
    Removing wdt.o(i.WDT_ConfigPeriod), (28 bytes).
    Removing wdt.o(i.WDT_DisableOverflowInt), (40 bytes).
    Removing wdt.o(i.WDT_DisableRestSystem), (56 bytes).
    Removing wdt.o(i.WDT_EnableOverflowInt), (40 bytes).
    Removing wdt.o(i.WDT_EnableRestSystem), (40 bytes).
    Removing wdt.o(i.WDT_GetOverflowIntFlag), (12 bytes).
    Removing wdt.o(i.WDT_GetTimingData), (8 bytes).
    Removing wwdt.o(.rev16_text), (4 bytes).
    Removing wwdt.o(.revsh_text), (4 bytes).
    Removing wwdt.o(i.WWDT_ClearCompareIntFlag), (18 bytes).
    Removing wwdt.o(i.WWDT_ConfigClk), (26 bytes).
    Removing wwdt.o(i.WWDT_ConfigCompare), (36 bytes).
    Removing wwdt.o(i.WWDT_DisableCompareInt), (18 bytes).
    Removing wwdt.o(i.WWDT_EnableCompareInt), (18 bytes).
    Removing wwdt.o(i.WWDT_GetCompareIntFlag), (12 bytes).
    Removing wwdt.o(i.WWDT_GetTimingData), (12 bytes).
    Removing wwdt.o(i.WWDT_Reload), (16 bytes).
    Removing wwdt.o(i.WWDT_Start), (18 bytes).
    Removing wwdt.o(i.WWDT_Stop), (18 bytes).
    Removing dadd.o(.text), (360 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

399 unused section(s) (total 12534 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_cms32m55xx.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\CODE\APL\isr.c                     0x00000000   Number         0  isr.o ABSOLUTE
    ..\..\CODE\APL\main.c                    0x00000000   Number         0  main.o ABSOLUTE
    ..\..\CODE\FML\Source\Motor_Control.c    0x00000000   Number         0  motor_control.o ABSOLUTE
    ..\..\CODE\FML\Source\Motor_PID.c        0x00000000   Number         0  motor_pid.o ABSOLUTE
    ..\..\CODE\FML\Source\Motor_SVPWM.c      0x00000000   Number         0  motor_svpwm.o ABSOLUTE
    ..\..\CODE\FML\Source\Motor_math.c       0x00000000   Number         0  motor_math.o ABSOLUTE
    ..\..\CODE\FML\Source\UART_Process.c     0x00000000   Number         0  uart_process.o ABSOLUTE
    ..\..\CODE\FML\Source\retarget.c         0x00000000   Number         0  retarget.o ABSOLUTE
    ..\..\CODE\HAL\CORE\Source\ARM\startup_CMS32M55xx.s 0x00000000   Number         0  startup_cms32m55xx.o ABSOLUTE
    ..\..\CODE\HAL\CORE\Source\system_CMS32M55xx.c 0x00000000   Number         0  system_cms32m55xx.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\acmp.c          0x00000000   Number         0  acmp.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\adc0.c          0x00000000   Number         0  adc0.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\adc1.c          0x00000000   Number         0  adc1.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\ccp.c           0x00000000   Number         0  ccp.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\crc.c           0x00000000   Number         0  crc.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\epwm.c          0x00000000   Number         0  epwm.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\fmc.c           0x00000000   Number         0  fmc.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\gpio.c          0x00000000   Number         0  gpio.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\hwdiv.c         0x00000000   Number         0  hwdiv.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\i2c.c           0x00000000   Number         0  i2c.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\opa.c           0x00000000   Number         0  opa.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\pga.c           0x00000000   Number         0  pga.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\ssp.c           0x00000000   Number         0  ssp.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\system.c        0x00000000   Number         0  system.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\timer.c         0x00000000   Number         0  timer.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\uart.c          0x00000000   Number         0  uart.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\wdt.c           0x00000000   Number         0  wdt.o ABSOLUTE
    ..\..\CODE\HAL\FWLIB\src\wwdt.c          0x00000000   Number         0  wwdt.o ABSOLUTE
    ..\..\CODE\HDL\Source\ADC_Config.c       0x00000000   Number         0  adc_config.o ABSOLUTE
    ..\..\CODE\HDL\Source\CCP_Config.c       0x00000000   Number         0  ccp_config.o ABSOLUTE
    ..\..\CODE\HDL\Source\EPWM_Config.c      0x00000000   Number         0  epwm_config.o ABSOLUTE
    ..\..\CODE\HDL\Source\System_Config.c    0x00000000   Number         0  system_config.o ABSOLUTE
    ..\..\CODE\HDL\Source\TIM_Config.c       0x00000000   Number         0  tim_config.o ABSOLUTE
    ..\..\CODE\HDL\Source\UART_Config.c      0x00000000   Number         0  uart_config.o ABSOLUTE
    ..\\..\\CODE\\APL\\isr.c                 0x00000000   Number         0  isr.o ABSOLUTE
    ..\\..\\CODE\\APL\\main.c                0x00000000   Number         0  main.o ABSOLUTE
    ..\\..\\CODE\\FML\\Source\\Motor_Control.c 0x00000000   Number         0  motor_control.o ABSOLUTE
    ..\\..\\CODE\\FML\\Source\\Motor_SVPWM.c 0x00000000   Number         0  motor_svpwm.o ABSOLUTE
    ..\\..\\CODE\\FML\\Source\\Motor_math.c  0x00000000   Number         0  motor_math.o ABSOLUTE
    ..\\..\\CODE\\FML\\Source\\retarget.c    0x00000000   Number         0  retarget.o ABSOLUTE
    ..\\..\\CODE\\HAL\\CORE\\Source\\system_CMS32M55xx.c 0x00000000   Number         0  system_cms32m55xx.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\acmp.c    0x00000000   Number         0  acmp.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\adc0.c    0x00000000   Number         0  adc0.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\adc1.c    0x00000000   Number         0  adc1.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\ccp.c     0x00000000   Number         0  ccp.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\crc.c     0x00000000   Number         0  crc.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\epwm.c    0x00000000   Number         0  epwm.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\fmc.c     0x00000000   Number         0  fmc.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\gpio.c    0x00000000   Number         0  gpio.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\hwdiv.c   0x00000000   Number         0  hwdiv.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\i2c.c     0x00000000   Number         0  i2c.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\opa.c     0x00000000   Number         0  opa.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\pga.c     0x00000000   Number         0  pga.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\ssp.c     0x00000000   Number         0  ssp.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\system.c  0x00000000   Number         0  system.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\timer.c   0x00000000   Number         0  timer.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\uart.c    0x00000000   Number         0  uart.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\wdt.c     0x00000000   Number         0  wdt.o ABSOLUTE
    ..\\..\\CODE\\HAL\\FWLIB\\src\\wwdt.c    0x00000000   Number         0  wwdt.o ABSOLUTE
    ..\\..\\CODE\\HDL\\Source\\ADC_Config.c  0x00000000   Number         0  adc_config.o ABSOLUTE
    ..\\..\\CODE\\HDL\\Source\\CCP_Config.c  0x00000000   Number         0  ccp_config.o ABSOLUTE
    ..\\..\\CODE\\HDL\\Source\\EPWM_Config.c 0x00000000   Number         0  epwm_config.o ABSOLUTE
    ..\\..\\CODE\\HDL\\Source\\System_Config.c 0x00000000   Number         0  system_config.o ABSOLUTE
    ..\\..\\CODE\\HDL\\Source\\TIM_Config.c  0x00000000   Number         0  tim_config.o ABSOLUTE
    ..\\..\\CODE\\HDL\\Source\\UART_Config.c 0x00000000   Number         0  uart_config.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000E                 0x000000d0   Section        4  entry12b.o(.ARM.Collect$$$$0000000E)
    .ARM.Collect$$$$0000000F                 0x000000d4   Section        0  entry10a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00000011                 0x000000d4   Section        0  entry11a.o(.ARM.Collect$$$$00000011)
    .ARM.Collect$$$$00002712                 0x000000d4   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d4   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d8   Section       32  startup_cms32m55xx.o(.text)
    .text                                    0x000000f8   Section        0  uidiv.o(.text)
    .text                                    0x00000124   Section       36  init.o(.text)
    i.ACMP_IRQHandler                        0x00000148   Section        0  isr.o(i.ACMP_IRQHandler)
    i.ADC0_IRQHandler                        0x0000014a   Section        0  isr.o(i.ADC0_IRQHandler)
    i.ADC1_ClearChannelIntFlag               0x0000014c   Section        0  adc1.o(i.ADC1_ClearChannelIntFlag)
    i.ADC1_GetChannelIntFlag                 0x0000016a   Section        0  adc1.o(i.ADC1_GetChannelIntFlag)
    i.ADC1_IRQHandler                        0x00000184   Section        0  isr.o(i.ADC1_IRQHandler)
    i.CCP_ClearCAPMode1IntFlag               0x000001c4   Section        0  ccp.o(i.CCP_ClearCAPMode1IntFlag)
    i.CCP_ClearOverflowIntFlag               0x000001dc   Section        0  ccp.o(i.CCP_ClearOverflowIntFlag)
    i.CCP_GetCAPMode1IntFlag                 0x000001f4   Section        0  ccp.o(i.CCP_GetCAPMode1IntFlag)
    i.CCP_GetOverflowIntFlag                 0x00000214   Section        0  ccp.o(i.CCP_GetOverflowIntFlag)
    i.CCP_IRQHandler                         0x00000234   Section        0  isr.o(i.CCP_IRQHandler)
    i.EPWM_AllBrakeDisable                   0x00000278   Section        0  epwm.o(i.EPWM_AllBrakeDisable)
    i.EPWM_ClearPeriodIntFlag                0x00000294   Section        0  epwm.o(i.EPWM_ClearPeriodIntFlag)
    i.EPWM_ConfigChannelAsymDuty             0x000002ac   Section        0  epwm.o(i.EPWM_ConfigChannelAsymDuty)
    i.EPWM_ConfigChannelClk                  0x000002e4   Section        0  epwm.o(i.EPWM_ConfigChannelClk)
    i.EPWM_ConfigChannelPeriod               0x00000328   Section        0  epwm.o(i.EPWM_ConfigChannelPeriod)
    i.EPWM_ConfigCompareTriger               0x0000035c   Section        0  epwm.o(i.EPWM_ConfigCompareTriger)
    i.EPWM_ConfigLoadAndIntMode              0x00000384   Section        0  epwm.o(i.EPWM_ConfigLoadAndIntMode)
    i.EPWM_ConfigRunMode                     0x000003c4   Section        0  epwm.o(i.EPWM_ConfigRunMode)
    i.EPWM_DisableReverseOutput              0x000003f0   Section        0  epwm.o(i.EPWM_DisableReverseOutput)
    i.EPWM_EnableAutoLoadMode                0x00000414   Section        0  epwm.o(i.EPWM_EnableAutoLoadMode)
    i.EPWM_EnableChannelRemap                0x00000434   Section        0  epwm.o(i.EPWM_EnableChannelRemap)
    i.EPWM_EnableDeadZone                    0x00000474   Section        0  epwm.o(i.EPWM_EnableDeadZone)
    i.EPWM_EnableOutput                      0x00000544   Section        0  epwm.o(i.EPWM_EnableOutput)
    i.EPWM_EnablePeriodInt                   0x0000055c   Section        0  epwm.o(i.EPWM_EnablePeriodInt)
    i.EPWM_GetPeriodIntFlag                  0x00000578   Section        0  epwm.o(i.EPWM_GetPeriodIntFlag)
    i.EPWM_IRQHandler                        0x00000598   Section        0  isr.o(i.EPWM_IRQHandler)
    i.EPWM_Init                              0x000005b0   Section        0  epwm_config.o(i.EPWM_Init)
    i.EPWM_Start                             0x000006c8   Section        0  epwm.o(i.EPWM_Start)
    i.FOC_Model                              0x000006e8   Section        0  motor_control.o(i.FOC_Model)
    i.GPIO0_IRQHandler                       0x00000760   Section        0  isr.o(i.GPIO0_IRQHandler)
    i.GPIO2_IRQHandler                       0x00000762   Section        0  isr.o(i.GPIO2_IRQHandler)
    i.GPIO3_IRQHandler                       0x00000764   Section        0  isr.o(i.GPIO3_IRQHandler)
    i.GPIO4_IRQHandler                       0x00000766   Section        0  isr.o(i.GPIO4_IRQHandler)
    i.HardFault_Handler                      0x00000768   Section        0  isr.o(i.HardFault_Handler)
    i.HardwareInit                           0x0000076a   Section        0  main.o(i.HardwareInit)
    i.I2C0_IRQHandler                        0x0000077a   Section        0  isr.o(i.I2C0_IRQHandler)
    i.MCM_Rev_Park                           0x0000077c   Section        0  motor_math.o(i.MCM_Rev_Park)
    i.MCM_Trig_Functions                     0x000007d8   Section        0  motor_math.o(i.MCM_Trig_Functions)
    i.NMI_Handler                            0x000008a8   Section        0  isr.o(i.NMI_Handler)
    i.NVIC_EnableIRQ                         0x000008ac   Section        0  main.o(i.NVIC_EnableIRQ)
    NVIC_EnableIRQ                           0x000008ad   Thumb Code    14  main.o(i.NVIC_EnableIRQ)
    i.NVIC_Init                              0x000008c0   Section        0  main.o(i.NVIC_Init)
    i.NVIC_SetPriority                       0x0000090c   Section        0  main.o(i.NVIC_SetPriority)
    NVIC_SetPriority                         0x0000090d   Thumb Code   110  main.o(i.NVIC_SetPriority)
    i.PendSV_Handler                         0x00000984   Section        0  isr.o(i.PendSV_Handler)
    i.SSP0_IRQHandler                        0x00000986   Section        0  isr.o(i.SSP0_IRQHandler)
    i.SVC_Handler                            0x00000988   Section        0  isr.o(i.SVC_Handler)
    i.SVPWM_SetPhaseVoltage                  0x0000098c   Section        0  motor_svpwm.o(i.SVPWM_SetPhaseVoltage)
    i.SYS_CHK_IRQHandler                     0x00000b90   Section        0  isr.o(i.SYS_CHK_IRQHandler)
    i.SYS_ConfigAHBClock                     0x00000b94   Section        0  system.o(i.SYS_ConfigAHBClock)
    i.SYS_ConfigAPBClock                     0x00000bc8   Section        0  system.o(i.SYS_ConfigAPBClock)
    i.SYS_ConfigHSI                          0x00000bd0   Section        0  system.o(i.SYS_ConfigHSI)
    i.SYS_EnableHSI                          0x00000bf4   Section        0  system.o(i.SYS_EnableHSI)
    i.SYS_EnablePeripheralClk                0x00000c10   Section        0  system.o(i.SYS_EnablePeripheralClk)
    i.SYS_GetHSIState                        0x00000c20   Section        0  system.o(i.SYS_GetHSIState)
    i.SoftwareInit                           0x00000c2c   Section        0  main.o(i.SoftwareInit)
    i.SysTick_Handler                        0x00000c2e   Section        0  isr.o(i.SysTick_Handler)
    i.SystemCoreClockUpdate                  0x00000c30   Section        0  system_cms32m55xx.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x00000ce4   Section        0  system_cms32m55xx.o(i.SystemInit)
    i.System_Init                            0x00000cec   Section        0  system_config.o(i.System_Init)
    i.TIMER0_IRQHandler                      0x00000d38   Section        0  isr.o(i.TIMER0_IRQHandler)
    i.TIMER1_IRQHandler                      0x00000d3a   Section        0  isr.o(i.TIMER1_IRQHandler)
    i.UART0_IRQHandler                       0x00000d3c   Section        0  isr.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00000d40   Section        0  uart_config.o(i.UART1_IRQHandler)
    i.UART_ConfigRunMode                     0x00000de8   Section        0  uart.o(i.UART_ConfigRunMode)
    i.UART_EnableAuto                        0x00000e20   Section        0  uart.o(i.UART_EnableAuto)
    i.UART_EnableFIFO                        0x00000e2a   Section        0  uart.o(i.UART_EnableFIFO)
    i.UART_EnableRBRInt                      0x00000e42   Section        0  uart.o(i.UART_EnableRBRInt)
    i.UART_EnableTHREInt                     0x00000e4c   Section        0  uart.o(i.UART_EnableTHREInt)
    i.UART_Init                              0x00000e58   Section        0  uart_config.o(i.UART_Init)
    i.UART_ReadRBR                           0x00000ebc   Section        0  uart.o(i.UART_ReadRBR)
    i.WDT_IRQHandler                         0x00000ec2   Section        0  isr.o(i.WDT_IRQHandler)
    i.WWDT_IRQHandler                        0x00000ec4   Section        0  isr.o(i.WWDT_IRQHandler)
    i.__0printf$bare                         0x00000ec8   Section        0  printfb.o(i.__0printf$bare)
    i.__ARM_common_switch8                   0x00000edc   Section        0  uart_config.o(i.__ARM_common_switch8)
    i.__scatterload_copy                     0x00000ef8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00000f06   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00000f08   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00000f16   Section        0  printfb.o(i._printf_core)
    _printf_core                             0x00000f17   Thumb Code    30  printfb.o(i._printf_core)
    i.fputc                                  0x00000f34   Section        0  retarget.o(i.fputc)
    i.main                                   0x00000f68   Section        0  main.o(i.main)
    .constdata                               0x00000f78   Section      512  motor_math.o(.constdata)
    .data                                    0x20000000   Section       21  isr.o(.data)
    .data                                    0x20000016   Section       30  motor_control.o(.data)
    .data                                    0x20000034   Section        8  motor_svpwm.o(.data)
    .data                                    0x2000003c   Section        8  retarget.o(.data)
    .data                                    0x20000044   Section       20  uart_config.o(.data)
    U_IntID                                  0x2000004c   Data           4  uart_config.o(.data)
    U_LSRFlag                                0x20000050   Data           4  uart_config.o(.data)
    U_count                                  0x20000054   Data           4  uart_config.o(.data)
    .data                                    0x20000058   Section       12  system_cms32m55xx.o(.data)
    .bss                                     0x20000064   Section       32  uart_config.o(.bss)
    STACK                                    0x20000088   Section     2048  startup_cms32m55xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_cms32m55xx.o(RESET)
    __arm_fini_                               - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_lib_shutdown_fini                   0x000000d1   Thumb Code     0  entry12b.o(.ARM.Collect$$$$0000000E)
    __rt_final_cpp                           0x000000d5   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000F)
    __rt_final_exit                          0x000000d5   Thumb Code     0  entry11a.o(.ARM.Collect$$$$00000011)
    Reset_Handler                            0x000000d9   Thumb Code     8  startup_cms32m55xx.o(.text)
    Reserved_IRQHandler                      0x000000eb   Thumb Code     2  startup_cms32m55xx.o(.text)
    GPIO1_IRQHandler                         0x000000ed   Thumb Code     0  startup_cms32m55xx.o(.text)
    __aeabi_uidiv                            0x000000f9   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000000f9   Thumb Code    44  uidiv.o(.text)
    __scatterload                            0x00000125   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000125   Thumb Code     0  init.o(.text)
    ACMP_IRQHandler                          0x00000149   Thumb Code     2  isr.o(i.ACMP_IRQHandler)
    ADC0_IRQHandler                          0x0000014b   Thumb Code     2  isr.o(i.ADC0_IRQHandler)
    ADC1_ClearChannelIntFlag                 0x0000014d   Thumb Code    30  adc1.o(i.ADC1_ClearChannelIntFlag)
    ADC1_GetChannelIntFlag                   0x0000016b   Thumb Code    26  adc1.o(i.ADC1_GetChannelIntFlag)
    ADC1_IRQHandler                          0x00000185   Thumb Code    40  isr.o(i.ADC1_IRQHandler)
    CCP_ClearCAPMode1IntFlag                 0x000001c5   Thumb Code    20  ccp.o(i.CCP_ClearCAPMode1IntFlag)
    CCP_ClearOverflowIntFlag                 0x000001dd   Thumb Code    18  ccp.o(i.CCP_ClearOverflowIntFlag)
    CCP_GetCAPMode1IntFlag                   0x000001f5   Thumb Code    28  ccp.o(i.CCP_GetCAPMode1IntFlag)
    CCP_GetOverflowIntFlag                   0x00000215   Thumb Code    26  ccp.o(i.CCP_GetOverflowIntFlag)
    CCP_IRQHandler                           0x00000235   Thumb Code    68  isr.o(i.CCP_IRQHandler)
    EPWM_AllBrakeDisable                     0x00000279   Thumb Code    22  epwm.o(i.EPWM_AllBrakeDisable)
    EPWM_ClearPeriodIntFlag                  0x00000295   Thumb Code    20  epwm.o(i.EPWM_ClearPeriodIntFlag)
    EPWM_ConfigChannelAsymDuty               0x000002ad   Thumb Code    52  epwm.o(i.EPWM_ConfigChannelAsymDuty)
    EPWM_ConfigChannelClk                    0x000002e5   Thumb Code    60  epwm.o(i.EPWM_ConfigChannelClk)
    EPWM_ConfigChannelPeriod                 0x00000329   Thumb Code    48  epwm.o(i.EPWM_ConfigChannelPeriod)
    EPWM_ConfigCompareTriger                 0x0000035d   Thumb Code    34  epwm.o(i.EPWM_ConfigCompareTriger)
    EPWM_ConfigLoadAndIntMode                0x00000385   Thumb Code    58  epwm.o(i.EPWM_ConfigLoadAndIntMode)
    EPWM_ConfigRunMode                       0x000003c5   Thumb Code    40  epwm.o(i.EPWM_ConfigRunMode)
    EPWM_DisableReverseOutput                0x000003f1   Thumb Code    30  epwm.o(i.EPWM_DisableReverseOutput)
    EPWM_EnableAutoLoadMode                  0x00000415   Thumb Code    28  epwm.o(i.EPWM_EnableAutoLoadMode)
    EPWM_EnableChannelRemap                  0x00000435   Thumb Code    58  epwm.o(i.EPWM_EnableChannelRemap)
    EPWM_EnableDeadZone                      0x00000475   Thumb Code   194  epwm.o(i.EPWM_EnableDeadZone)
    EPWM_EnableOutput                        0x00000545   Thumb Code    20  epwm.o(i.EPWM_EnableOutput)
    EPWM_EnablePeriodInt                     0x0000055d   Thumb Code    24  epwm.o(i.EPWM_EnablePeriodInt)
    EPWM_GetPeriodIntFlag                    0x00000579   Thumb Code    28  epwm.o(i.EPWM_GetPeriodIntFlag)
    EPWM_IRQHandler                          0x00000599   Thumb Code    24  isr.o(i.EPWM_IRQHandler)
    EPWM_Init                                0x000005b1   Thumb Code   276  epwm_config.o(i.EPWM_Init)
    EPWM_Start                               0x000006c9   Thumb Code    28  epwm.o(i.EPWM_Start)
    FOC_Model                                0x000006e9   Thumb Code   100  motor_control.o(i.FOC_Model)
    GPIO0_IRQHandler                         0x00000761   Thumb Code     2  isr.o(i.GPIO0_IRQHandler)
    GPIO2_IRQHandler                         0x00000763   Thumb Code     2  isr.o(i.GPIO2_IRQHandler)
    GPIO3_IRQHandler                         0x00000765   Thumb Code     2  isr.o(i.GPIO3_IRQHandler)
    GPIO4_IRQHandler                         0x00000767   Thumb Code     2  isr.o(i.GPIO4_IRQHandler)
    HardFault_Handler                        0x00000769   Thumb Code     2  isr.o(i.HardFault_Handler)
    HardwareInit                             0x0000076b   Thumb Code    16  main.o(i.HardwareInit)
    I2C0_IRQHandler                          0x0000077b   Thumb Code     2  isr.o(i.I2C0_IRQHandler)
    MCM_Rev_Park                             0x0000077d   Thumb Code    92  motor_math.o(i.MCM_Rev_Park)
    MCM_Trig_Functions                       0x000007d9   Thumb Code   204  motor_math.o(i.MCM_Trig_Functions)
    NMI_Handler                              0x000008a9   Thumb Code     2  isr.o(i.NMI_Handler)
    NVIC_Init                                0x000008c1   Thumb Code    74  main.o(i.NVIC_Init)
    PendSV_Handler                           0x00000985   Thumb Code     2  isr.o(i.PendSV_Handler)
    SSP0_IRQHandler                          0x00000987   Thumb Code     2  isr.o(i.SSP0_IRQHandler)
    SVC_Handler                              0x00000989   Thumb Code     2  isr.o(i.SVC_Handler)
    SVPWM_SetPhaseVoltage                    0x0000098d   Thumb Code   504  motor_svpwm.o(i.SVPWM_SetPhaseVoltage)
    SYS_CHK_IRQHandler                       0x00000b91   Thumb Code     2  isr.o(i.SYS_CHK_IRQHandler)
    SYS_ConfigAHBClock                       0x00000b95   Thumb Code    44  system.o(i.SYS_ConfigAHBClock)
    SYS_ConfigAPBClock                       0x00000bc9   Thumb Code     8  system.o(i.SYS_ConfigAPBClock)
    SYS_ConfigHSI                            0x00000bd1   Thumb Code    32  system.o(i.SYS_ConfigHSI)
    SYS_EnableHSI                            0x00000bf5   Thumb Code    24  system.o(i.SYS_EnableHSI)
    SYS_EnablePeripheralClk                  0x00000c11   Thumb Code    16  system.o(i.SYS_EnablePeripheralClk)
    SYS_GetHSIState                          0x00000c21   Thumb Code    12  system.o(i.SYS_GetHSIState)
    SoftwareInit                             0x00000c2d   Thumb Code     2  main.o(i.SoftwareInit)
    SysTick_Handler                          0x00000c2f   Thumb Code     2  isr.o(i.SysTick_Handler)
    SystemCoreClockUpdate                    0x00000c31   Thumb Code   150  system_cms32m55xx.o(i.SystemCoreClockUpdate)
    SystemInit                               0x00000ce5   Thumb Code     8  system_cms32m55xx.o(i.SystemInit)
    System_Init                              0x00000ced   Thumb Code    72  system_config.o(i.System_Init)
    TIMER0_IRQHandler                        0x00000d39   Thumb Code     2  isr.o(i.TIMER0_IRQHandler)
    TIMER1_IRQHandler                        0x00000d3b   Thumb Code     2  isr.o(i.TIMER1_IRQHandler)
    UART0_IRQHandler                         0x00000d3d   Thumb Code     2  isr.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00000d41   Thumb Code   142  uart_config.o(i.UART1_IRQHandler)
    UART_ConfigRunMode                       0x00000de9   Thumb Code    50  uart.o(i.UART_ConfigRunMode)
    UART_EnableAuto                          0x00000e21   Thumb Code    10  uart.o(i.UART_EnableAuto)
    UART_EnableFIFO                          0x00000e2b   Thumb Code    24  uart.o(i.UART_EnableFIFO)
    UART_EnableRBRInt                        0x00000e43   Thumb Code    10  uart.o(i.UART_EnableRBRInt)
    UART_EnableTHREInt                       0x00000e4d   Thumb Code    10  uart.o(i.UART_EnableTHREInt)
    UART_Init                                0x00000e59   Thumb Code    94  uart_config.o(i.UART_Init)
    UART_ReadRBR                             0x00000ebd   Thumb Code     6  uart.o(i.UART_ReadRBR)
    WDT_IRQHandler                           0x00000ec3   Thumb Code     2  isr.o(i.WDT_IRQHandler)
    WWDT_IRQHandler                          0x00000ec5   Thumb Code     2  isr.o(i.WWDT_IRQHandler)
    __0printf$bare                           0x00000ec9   Thumb Code    12  printfb.o(i.__0printf$bare)
    __1printf$bare                           0x00000ec9   Thumb Code     0  printfb.o(i.__0printf$bare)
    __2printf                                0x00000ec9   Thumb Code     0  printfb.o(i.__0printf$bare)
    __ARM_common_switch8                     0x00000edd   Thumb Code    28  uart_config.o(i.__ARM_common_switch8)
    __scatterload_copy                       0x00000ef9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00000f07   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00000f09   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x00000f35   Thumb Code    52  retarget.o(i.fputc)
    main                                     0x00000f69   Thumb Code    16  main.o(i.main)
    hSin_Cos_Table                           0x00000f78   Data         512  motor_math.o(.constdata)
    Region$$Table$$Base                      0x00001178   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001198   Number         0  anon$$obj.o(Region$$Table)
    CaptureTime                              0x20000000   Data           4  isr.o(.data)
    CaptureValue1                            0x20000004   Data           4  isr.o(.data)
    CaptureValue2                            0x20000008   Data           4  isr.o(.data)
    CaptureCount                             0x2000000c   Data           4  isr.o(.data)
    OverFlowFlag                             0x20000010   Data           4  isr.o(.data)
    ADCFlag                                  0x20000014   Data           1  isr.o(.data)
    Vector_Components                        0x20000016   Data           4  motor_control.o(.data)
    cnt                                      0x2000001a   Data           2  motor_control.o(.data)
    Stat_Curr_a_b                            0x2000001c   Data           4  motor_control.o(.data)
    Stat_Curr_alfa_beta                      0x20000020   Data           4  motor_control.o(.data)
    Stat_Curr_q_d                            0x20000024   Data           4  motor_control.o(.data)
    Stat_Curr_q_d_ref_ref                    0x20000028   Data           4  motor_control.o(.data)
    Stat_Volt_q_d                            0x2000002c   Data           4  motor_control.o(.data)
    Stat_Volt_alfa_beta                      0x20000030   Data           4  motor_control.o(.data)
    bSector                                  0x20000034   Data           1  motor_svpwm.o(.data)
    Period                                   0x20000038   Data           4  motor_svpwm.o(.data)
    __stdout                                 0x2000003c   Data           4  retarget.o(.data)
    __stdin                                  0x20000040   Data           4  retarget.o(.data)
    U_RxdFlag                                0x20000044   Data           4  uart_config.o(.data)
    U_TxdFlag                                0x20000048   Data           4  uart_config.o(.data)
    SystemCoreClock                          0x20000058   Data           4  system_cms32m55xx.o(.data)
    SystemAPBClock                           0x2000005c   Data           4  system_cms32m55xx.o(.data)
    CyclesPerUs                              0x20000060   Data           4  system_cms32m55xx.o(.data)
    U_ReceiveData                            0x20000064   Data          16  uart_config.o(.bss)
    U_SendData                               0x20000074   Data          16  uart_config.o(.bss)
    __initial_sp                             0x20000888   Data           0  startup_cms32m55xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000011fc, Max: 0x00008000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001198, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          714    RESET               startup_cms32m55xx.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         3047  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         3314    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         3317    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         3319    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         3321    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         3322    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         3329    .ARM.Collect$$$$0000000E  mc_p.l(entry12b.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         3324    .ARM.Collect$$$$0000000F  mc_p.l(entry10a.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         3326    .ARM.Collect$$$$00000011  mc_p.l(entry11a.o)
    0x000000d4   0x000000d4   0x00000004   Code   RO         3315    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d8   0x000000d8   0x00000020   Code   RO          715    .text               startup_cms32m55xx.o
    0x000000f8   0x000000f8   0x0000002c   Code   RO         3050    .text               mc_p.l(uidiv.o)
    0x00000124   0x00000124   0x00000024   Code   RO         3343    .text               mc_p.l(init.o)
    0x00000148   0x00000148   0x00000002   Code   RO            3    i.ACMP_IRQHandler   isr.o
    0x0000014a   0x0000014a   0x00000002   Code   RO            4    i.ADC0_IRQHandler   isr.o
    0x0000014c   0x0000014c   0x0000001e   Code   RO         1008    i.ADC1_ClearChannelIntFlag  adc1.o
    0x0000016a   0x0000016a   0x0000001a   Code   RO         1028    i.ADC1_GetChannelIntFlag  adc1.o
    0x00000184   0x00000184   0x00000040   Code   RO            5    i.ADC1_IRQHandler   isr.o
    0x000001c4   0x000001c4   0x00000018   Code   RO         1202    i.CCP_ClearCAPMode1IntFlag  ccp.o
    0x000001dc   0x000001dc   0x00000018   Code   RO         1204    i.CCP_ClearOverflowIntFlag  ccp.o
    0x000001f4   0x000001f4   0x00000020   Code   RO         1229    i.CCP_GetCAPMode1IntFlag  ccp.o
    0x00000214   0x00000214   0x00000020   Code   RO         1232    i.CCP_GetOverflowIntFlag  ccp.o
    0x00000234   0x00000234   0x00000044   Code   RO            6    i.CCP_IRQHandler    isr.o
    0x00000278   0x00000278   0x0000001c   Code   RO         1469    i.EPWM_AllBrakeDisable  epwm.o
    0x00000294   0x00000294   0x00000018   Code   RO         1476    i.EPWM_ClearPeriodIntFlag  epwm.o
    0x000002ac   0x000002ac   0x00000038   Code   RO         1479    i.EPWM_ConfigChannelAsymDuty  epwm.o
    0x000002e4   0x000002e4   0x00000044   Code   RO         1480    i.EPWM_ConfigChannelClk  epwm.o
    0x00000328   0x00000328   0x00000034   Code   RO         1481    i.EPWM_ConfigChannelPeriod  epwm.o
    0x0000035c   0x0000035c   0x00000028   Code   RO         1483    i.EPWM_ConfigCompareTriger  epwm.o
    0x00000384   0x00000384   0x00000040   Code   RO         1485    i.EPWM_ConfigLoadAndIntMode  epwm.o
    0x000003c4   0x000003c4   0x0000002c   Code   RO         1486    i.EPWM_ConfigRunMode  epwm.o
    0x000003f0   0x000003f0   0x00000024   Code   RO         1498    i.EPWM_DisableReverseOutput  epwm.o
    0x00000414   0x00000414   0x00000020   Code   RO         1503    i.EPWM_EnableAutoLoadMode  epwm.o
    0x00000434   0x00000434   0x00000040   Code   RO         1505    i.EPWM_EnableChannelRemap  epwm.o
    0x00000474   0x00000474   0x000000d0   Code   RO         1507    i.EPWM_EnableDeadZone  epwm.o
    0x00000544   0x00000544   0x00000018   Code   RO         1515    i.EPWM_EnableOutput  epwm.o
    0x0000055c   0x0000055c   0x0000001c   Code   RO         1516    i.EPWM_EnablePeriodInt  epwm.o
    0x00000578   0x00000578   0x00000020   Code   RO         1528    i.EPWM_GetPeriodIntFlag  epwm.o
    0x00000598   0x00000598   0x00000018   Code   RO            7    i.EPWM_IRQHandler   isr.o
    0x000005b0   0x000005b0   0x00000118   Code   RO          548    i.EPWM_Init         epwm_config.o
    0x000006c8   0x000006c8   0x00000020   Code   RO         1531    i.EPWM_Start        epwm.o
    0x000006e8   0x000006e8   0x00000078   Code   RO          343    i.FOC_Model         motor_control.o
    0x00000760   0x00000760   0x00000002   Code   RO            8    i.GPIO0_IRQHandler  isr.o
    0x00000762   0x00000762   0x00000002   Code   RO            9    i.GPIO2_IRQHandler  isr.o
    0x00000764   0x00000764   0x00000002   Code   RO           10    i.GPIO3_IRQHandler  isr.o
    0x00000766   0x00000766   0x00000002   Code   RO           11    i.GPIO4_IRQHandler  isr.o
    0x00000768   0x00000768   0x00000002   Code   RO           12    i.HardFault_Handler  isr.o
    0x0000076a   0x0000076a   0x00000010   Code   RO          292    i.HardwareInit      main.o
    0x0000077a   0x0000077a   0x00000002   Code   RO           13    i.I2C0_IRQHandler   isr.o
    0x0000077c   0x0000077c   0x0000005c   Code   RO          371    i.MCM_Rev_Park      motor_math.o
    0x000007d8   0x000007d8   0x000000d0   Code   RO          373    i.MCM_Trig_Functions  motor_math.o
    0x000008a8   0x000008a8   0x00000002   Code   RO           14    i.NMI_Handler       isr.o
    0x000008aa   0x000008aa   0x00000002   PAD
    0x000008ac   0x000008ac   0x00000014   Code   RO          293    i.NVIC_EnableIRQ    main.o
    0x000008c0   0x000008c0   0x0000004a   Code   RO          294    i.NVIC_Init         main.o
    0x0000090a   0x0000090a   0x00000002   PAD
    0x0000090c   0x0000090c   0x00000078   Code   RO          295    i.NVIC_SetPriority  main.o
    0x00000984   0x00000984   0x00000002   Code   RO           15    i.PendSV_Handler    isr.o
    0x00000986   0x00000986   0x00000002   Code   RO           16    i.SSP0_IRQHandler   isr.o
    0x00000988   0x00000988   0x00000002   Code   RO           17    i.SVC_Handler       isr.o
    0x0000098a   0x0000098a   0x00000002   PAD
    0x0000098c   0x0000098c   0x00000204   Code   RO          422    i.SVPWM_SetPhaseVoltage  motor_svpwm.o
    0x00000b90   0x00000b90   0x00000002   Code   RO           18    i.SYS_CHK_IRQHandler  isr.o
    0x00000b92   0x00000b92   0x00000002   PAD
    0x00000b94   0x00000b94   0x00000034   Code   RO         2410    i.SYS_ConfigAHBClock  system.o
    0x00000bc8   0x00000bc8   0x00000008   Code   RO         2411    i.SYS_ConfigAPBClock  system.o
    0x00000bd0   0x00000bd0   0x00000024   Code   RO         2413    i.SYS_ConfigHSI     system.o
    0x00000bf4   0x00000bf4   0x0000001c   Code   RO         2423    i.SYS_EnableHSI     system.o
    0x00000c10   0x00000c10   0x00000010   Code   RO         2426    i.SYS_EnablePeripheralClk  system.o
    0x00000c20   0x00000c20   0x0000000c   Code   RO         2433    i.SYS_GetHSIState   system.o
    0x00000c2c   0x00000c2c   0x00000002   Code   RO          296    i.SoftwareInit      main.o
    0x00000c2e   0x00000c2e   0x00000002   Code   RO           19    i.SysTick_Handler   isr.o
    0x00000c30   0x00000c30   0x000000b4   Code   RO          682    i.SystemCoreClockUpdate  system_cms32m55xx.o
    0x00000ce4   0x00000ce4   0x00000008   Code   RO          683    i.SystemInit        system_cms32m55xx.o
    0x00000cec   0x00000cec   0x0000004c   Code   RO          659    i.System_Init       system_config.o
    0x00000d38   0x00000d38   0x00000002   Code   RO           20    i.TIMER0_IRQHandler  isr.o
    0x00000d3a   0x00000d3a   0x00000002   Code   RO           21    i.TIMER1_IRQHandler  isr.o
    0x00000d3c   0x00000d3c   0x00000002   Code   RO           22    i.UART0_IRQHandler  isr.o
    0x00000d3e   0x00000d3e   0x00000002   PAD
    0x00000d40   0x00000d40   0x000000a8   Code   RO          593    i.UART1_IRQHandler  uart_config.o
    0x00000de8   0x00000de8   0x00000038   Code   RO         2689    i.UART_ConfigRunMode  uart.o
    0x00000e20   0x00000e20   0x0000000a   Code   RO         2702    i.UART_EnableAuto   uart.o
    0x00000e2a   0x00000e2a   0x00000018   Code   RO         2705    i.UART_EnableFIFO   uart.o
    0x00000e42   0x00000e42   0x0000000a   Code   RO         2707    i.UART_EnableRBRInt  uart.o
    0x00000e4c   0x00000e4c   0x0000000a   Code   RO         2711    i.UART_EnableTHREInt  uart.o
    0x00000e56   0x00000e56   0x00000002   PAD
    0x00000e58   0x00000e58   0x00000064   Code   RO          594    i.UART_Init         uart_config.o
    0x00000ebc   0x00000ebc   0x00000006   Code   RO         2718    i.UART_ReadRBR      uart.o
    0x00000ec2   0x00000ec2   0x00000002   Code   RO           23    i.WDT_IRQHandler    isr.o
    0x00000ec4   0x00000ec4   0x00000002   Code   RO           24    i.WWDT_IRQHandler   isr.o
    0x00000ec6   0x00000ec6   0x00000002   PAD
    0x00000ec8   0x00000ec8   0x00000014   Code   RO         3055    i.__0printf$bare    mc_p.l(printfb.o)
    0x00000edc   0x00000edc   0x0000001c   Code   RO          649    i.__ARM_common_switch8  uart_config.o
    0x00000ef8   0x00000ef8   0x0000000e   Code   RO         3357    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00000f06   0x00000f06   0x00000002   Code   RO         3358    i.__scatterload_null  mc_p.l(handlers.o)
    0x00000f08   0x00000f08   0x0000000e   Code   RO         3359    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00000f16   0x00000f16   0x0000001e   Code   RO         3062    i._printf_core      mc_p.l(printfb.o)
    0x00000f34   0x00000f34   0x00000034   Code   RO          455    i.fputc             retarget.o
    0x00000f68   0x00000f68   0x00000010   Code   RO          297    i.main              main.o
    0x00000f78   0x00000f78   0x00000200   Data   RO          375    .constdata          motor_math.o
    0x00001178   0x00001178   0x00000020   Data   RO         3355    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00001198, Size: 0x00000888, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001198   0x00000015   Data   RW           25    .data               isr.o
    0x20000015   0x000011ad   0x00000001   PAD
    0x20000016   0x000011ae   0x0000001e   Data   RW          344    .data               motor_control.o
    0x20000034   0x000011cc   0x00000008   Data   RW          423    .data               motor_svpwm.o
    0x2000003c   0x000011d4   0x00000008   Data   RW          456    .data               retarget.o
    0x20000044   0x000011dc   0x00000014   Data   RW          597    .data               uart_config.o
    0x20000058   0x000011f0   0x0000000c   Data   RW          684    .data               system_cms32m55xx.o
    0x20000064        -       0x00000020   Zero   RW          596    .bss                uart_config.o
    0x20000084   0x000011fc   0x00000004   PAD
    0x20000088        -       0x00000800   Zero   RW          712    STACK               startup_cms32m55xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        56          0          0          0          0       1048   adc1.o
       112         20          0          0          0       2056   ccp.o
       832         88          0          0          0       8471   epwm.o
       280          4          0          0          0        596   epwm_config.o
       194         24          0         21          0      63003   isr.o
       248         16          0          0          0       8249   main.o
       120         20          0         30          0       1064   motor_control.o
       300          4        512          0          0       3909   motor_math.o
       516         12          0          8          0       1329   motor_svpwm.o
        52          0          0          8          0       2374   retarget.o
        32         10        192          0       2048        696   startup_cms32m55xx.o
       152         16          0          0          0       2978   system.o
       188         30          0         12          0       1378   system_cms32m55xx.o
        76          4          0          0          0      13114   system_config.o
       116          6          0          0          0       3605   uart.o
       296         42          0         20         32       1866   uart_config.o

    ----------------------------------------------------------------------
      3584        296        736        100       2084     115736   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        14          0          0          1          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         4          0          0          0          0          0   entry12b.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        50          8          0          0          0        144   printfb.o
        44          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
       184         24          0          0          0        284   Library Totals
         0          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       184         24          0          0          0        284   mc_p.l

    ----------------------------------------------------------------------
       184         24          0          0          0        284   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      3768        320        736        100       2084     113048   Grand Totals
      3768        320        736        100       2084     113048   ELF Image Totals
      3768        320        736        100          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4504 (   4.40kB)
    Total RW  Size (RW Data + ZI Data)              2184 (   2.13kB)
    Total ROM Size (Code + RO Data + RW Data)       4604 (   4.50kB)

==============================================================================

