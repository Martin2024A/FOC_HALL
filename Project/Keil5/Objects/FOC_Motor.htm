<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FOC_Motor.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FOC_Motor.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Sep 24 09:15:24 2024
<BR><P>
<H3>Maximum Stack Usage =         68 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; HardwareInit &rArr; UART_Init &rArr; UART_ConfigRunMode &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b]">Reserved_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">Reserved_IRQHandler</a><BR>
 <LI><a href="#[7]">GPIO1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">GPIO1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ACMP_IRQHandler</a> from isr.o(i.ACMP_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[d]">ADC0_IRQHandler</a> from isr.o(i.ADC0_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[10]">ADC1_IRQHandler</a> from isr.o(i.ADC1_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[c]">CCP_IRQHandler</a> from isr.o(i.CCP_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[f]">EPWM_IRQHandler</a> from isr.o(i.EPWM_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[6]">GPIO0_IRQHandler</a> from isr.o(i.GPIO0_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[7]">GPIO1_IRQHandler</a> from startup_cms32m55xx.o(.text) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[8]">GPIO2_IRQHandler</a> from isr.o(i.GPIO2_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[9]">GPIO3_IRQHandler</a> from isr.o(i.GPIO3_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[a]">GPIO4_IRQHandler</a> from isr.o(i.GPIO4_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from isr.o(i.HardFault_Handler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from isr.o(i.I2C0_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from isr.o(i.NMI_Handler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from isr.o(i.PendSV_Handler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[b]">Reserved_IRQHandler</a> from startup_cms32m55xx.o(.text) referenced 13 times from startup_cms32m55xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cms32m55xx.o(.text) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[18]">SSP0_IRQHandler</a> from isr.o(i.SSP0_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from isr.o(i.SVC_Handler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[19]">SYS_CHK_IRQHandler</a> from isr.o(i.SYS_CHK_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from isr.o(i.SysTick_Handler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[1b]">SystemInit</a> from system_cms32m55xx.o(i.SystemInit) referenced from startup_cms32m55xx.o(.text)
 <LI><a href="#[14]">TIMER0_IRQHandler</a> from isr.o(i.TIMER0_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[15]">TIMER1_IRQHandler</a> from isr.o(i.TIMER1_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from isr.o(i.UART0_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from uart_config.o(i.UART1_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[16]">WDT_IRQHandler</a> from isr.o(i.WDT_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[e]">WWDT_IRQHandler</a> from isr.o(i.WWDT_IRQHandler) referenced from startup_cms32m55xx.o(RESET)
 <LI><a href="#[1c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cms32m55xx.o(.text)
 <LI><a href="#[1d]">fputc</a> from retarget.o(i.fputc) referenced from printfb.o(i.__0printf$bare)
 <LI><a href="#[1a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[22]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[5e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[20]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[60]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[61]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cms32m55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Reserved_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32m55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cms32m55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ConfigRunMode
</UL>

<P><STRONG><a name="[1f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[11]"></a>ACMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ACMP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ADC1_ClearChannelIntFlag</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, adc1.o(i.ADC1_ClearChannelIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>

<P><STRONG><a name="[28]"></a>ADC1_ConfigRunMode</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, adc1.o(i.ADC1_ConfigRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC1_ConfigRunMode
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[30]"></a>ADC1_EnableAdjust</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, adc1.o(i.ADC1_EnableAdjust))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[2d]"></a>ADC1_EnableChannelInt</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc1.o(i.ADC1_EnableChannelInt))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[2c]"></a>ADC1_EnableEPWMCmp0TiggerChannel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc1.o(i.ADC1_EnableEPWMCmp0TiggerChannel))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[2b]"></a>ADC1_EnableHardwareTrigger</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, adc1.o(i.ADC1_EnableHardwareTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[29]"></a>ADC1_EnableScanChannel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc1.o(i.ADC1_EnableScanChannel))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[23]"></a>ADC1_GetChannelIntFlag</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc1.o(i.ADC1_GetChannelIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>

<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, isr.o(i.ADC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC1_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_GetChannelIntFlag
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_ClearChannelIntFlag
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ADC1_SetAN30Channel</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, adc1.o(i.ADC1_SetAN30Channel))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[2e]"></a>ADC1_Start</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, adc1.o(i.ADC1_Start))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[2f]"></a>ADC1_StartAdjust</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adc1.o(i.ADC1_StartAdjust))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[26]"></a>ADC_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, adc_config.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Init &rArr; ADC1_ConfigRunMode
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnablePeripheralClk
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_StartAdjust
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Start
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_SetAN30Channel
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_EnableScanChannel
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_EnableHardwareTrigger
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_EnableEPWMCmp0TiggerChannel
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_EnableChannelInt
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_EnableAdjust
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_ConfigRunMode
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[34]"></a>CCP_ClearCAPMode1IntFlag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ccp.o(i.CCP_ClearCAPMode1IntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_IRQHandler
</UL>

<P><STRONG><a name="[32]"></a>CCP_ClearOverflowIntFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ccp.o(i.CCP_ClearOverflowIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_IRQHandler
</UL>

<P><STRONG><a name="[33]"></a>CCP_GetCAPMode1IntFlag</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ccp.o(i.CCP_GetCAPMode1IntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_IRQHandler
</UL>

<P><STRONG><a name="[31]"></a>CCP_GetOverflowIntFlag</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ccp.o(i.CCP_GetOverflowIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_IRQHandler
</UL>

<P><STRONG><a name="[c]"></a>CCP_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, isr.o(i.CCP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CCP_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_GetOverflowIntFlag
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_GetCAPMode1IntFlag
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_ClearOverflowIntFlag
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCP_ClearCAPMode1IntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>EPWM_AllBrakeDisable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, epwm.o(i.EPWM_AllBrakeDisable))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[36]"></a>EPWM_ClearPeriodIntFlag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, epwm.o(i.EPWM_ClearPeriodIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_IRQHandler
</UL>

<P><STRONG><a name="[39]"></a>EPWM_ConfigChannelClk</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, epwm.o(i.EPWM_ConfigChannelClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EPWM_ConfigChannelClk
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[3a]"></a>EPWM_ConfigChannelPeriod</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, epwm.o(i.EPWM_ConfigChannelPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EPWM_ConfigChannelPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[3b]"></a>EPWM_ConfigChannelSymDuty</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, epwm.o(i.EPWM_ConfigChannelSymDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EPWM_ConfigChannelSymDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>EPWM_ConfigCompareTriger</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, epwm.o(i.EPWM_ConfigCompareTriger))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EPWM_ConfigCompareTriger
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[3f]"></a>EPWM_ConfigLoadAndIntMode</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, epwm.o(i.EPWM_ConfigLoadAndIntMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EPWM_ConfigLoadAndIntMode
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[38]"></a>EPWM_ConfigRunMode</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, epwm.o(i.EPWM_ConfigRunMode))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[3c]"></a>EPWM_DisableDeadZone</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, epwm.o(i.EPWM_DisableDeadZone))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[3e]"></a>EPWM_EnableAutoLoadMode</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, epwm.o(i.EPWM_EnableAutoLoadMode))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[43]"></a>EPWM_EnableOutput</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, epwm.o(i.EPWM_EnableOutput))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[41]"></a>EPWM_EnablePeriodInt</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, epwm.o(i.EPWM_EnablePeriodInt))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[3d]"></a>EPWM_EnableReverseOutput</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, epwm.o(i.EPWM_EnableReverseOutput))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[35]"></a>EPWM_GetPeriodIntFlag</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, epwm.o(i.EPWM_GetPeriodIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_IRQHandler
</UL>

<P><STRONG><a name="[f]"></a>EPWM_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.EPWM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EPWM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_GetPeriodIntFlag
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ClearPeriodIntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EPWM_Init</STRONG> (Thumb, 322 bytes, Stack size 8 bytes, epwm_config.o(i.EPWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EPWM_Init &rArr; EPWM_ConfigCompareTriger
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Start
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_EnableReverseOutput
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_EnablePeriodInt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_EnableOutput
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_EnableAutoLoadMode
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_DisableDeadZone
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ConfigRunMode
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ConfigLoadAndIntMode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ConfigCompareTriger
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ConfigChannelPeriod
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ConfigChannelClk
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_AllBrakeDisable
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnablePeripheralClk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ConfigChannelSymDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[44]"></a>EPWM_Start</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, epwm.o(i.EPWM_Start))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
</UL>

<P><STRONG><a name="[6]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>GPIO2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>GPIO3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPIO4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>HardwareInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.HardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HardwareInit &rArr; UART_Init &rArr; UART_ConfigRunMode &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.I2C0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>NVIC_Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SSP0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SSP0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SYS_CHK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SYS_CHK_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SYS_ConfigAHBClock</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system.o(i.SYS_ConfigAHBClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYS_ConfigAHBClock
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GetHSIState
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[51]"></a>SYS_ConfigAPBClock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system.o(i.SYS_ConfigAPBClock))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[4f]"></a>SYS_ConfigHSI</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system.o(i.SYS_ConfigHSI))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[50]"></a>SYS_EnableHSI</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system.o(i.SYS_EnableHSI))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[27]"></a>SYS_EnablePeripheralClk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system.o(i.SYS_EnablePeripheralClk))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[4b]"></a>SYS_GetHSIState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system.o(i.SYS_GetHSIState))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAHBClock
</UL>

<P><STRONG><a name="[5b]"></a>SoftwareInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.SoftwareInit))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, system_cms32m55xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[1b]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_cms32m55xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>System_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, system_config.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = System_Init &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnableHSI
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigHSI
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAPBClock
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAHBClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.TIMER0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.TIMER1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, uart_config.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadRBR
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART_ConfigRunMode</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, uart.o(i.UART_ConfigRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART_ConfigRunMode &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[55]"></a>UART_EnableAuto</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UART_EnableAuto))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[56]"></a>UART_EnableFIFO</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uart.o(i.UART_EnableFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_EnableFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[58]"></a>UART_EnableRBRInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UART_EnableRBRInt))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[57]"></a>UART_EnableTHREInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UART_EnableTHREInt))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[46]"></a>UART_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, uart_config.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UART_Init &rArr; UART_ConfigRunMode &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableTHREInt
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableRBRInt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableFIFO
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EnableAuto
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ConfigRunMode
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnablePeripheralClk
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>

<P><STRONG><a name="[53]"></a>UART_ReadRBR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart.o(i.UART_ReadRBR))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[16]"></a>WDT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.WDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WWDT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.WWDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32m55xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>__0printf$bare</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[64]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[24]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, printfb.o(i.__0printf$bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>

<P><STRONG><a name="[52]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart_config.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[66]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[67]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1d]"></a>fputc</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, retarget.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL>
<P><STRONG><a name="[1a]"></a>main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = main &rArr; HardwareInit &rArr; UART_Init &rArr; UART_ConfigRunMode &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPWM_ConfigChannelSymDuty
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardwareInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>

<P><STRONG><a name="[48]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>

<P><STRONG><a name="[5a]"></a>_printf_core</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
